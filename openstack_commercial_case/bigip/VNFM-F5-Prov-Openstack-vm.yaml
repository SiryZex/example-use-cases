tosca_definitions_version: cloudify_dsl_1_3

description: >
  Create an instance of BIG-IP on OpenStack.

imports:
  - http://www.getcloudify.org/spec/cloudify/4.5/types.yaml
  - plugin:cloudify-openstack-plugin

inputs:

  resource_prefix:
    description: Prefix of every resource created at this deployment on Openstack.
    default: cfy

  resource_suffix:
    description: Suffix of every resource created at this deployment on Openstack.
    default: 0

  openstack_network_deployment_name:
    type: string
    default: VNFM-Networking-Prov-Openstack-networks

  flavor_id:
    type: string
    default: f7cfaaa8-e2db-4f9b-a65b-6a407f340960

  image_id:
    type: string
    default: 6d8ff903-f35b-43df-b7c2-e219929924b9

  vnf_vm_name:
    type: string
    default: bigip


dsl_definitions:

  client_config: &client_config
    username: { get_secret: keystone_username }
    password: { get_secret: keystone_password }
    tenant_name: { get_secret: keystone_tenant_name }
    auth_url: { get_secret: keystone_url }
    region: { get_secret: keystone_region }

node_templates:

  mgmt_network:
    type: cloudify.openstack.nodes.Network
    properties:
      openstack_config: *client_config
      use_external_resource: true
      resource_id:  { get_capability: [{ get_input: openstack_network_deployment_name }, mgmt_network] }

  public_network:
    type: cloudify.openstack.nodes.Network
    properties:
      openstack_config: *client_config
      use_external_resource: true
      resource_id:  { get_capability: [{ get_input: openstack_network_deployment_name }, public_network] }

  wan_network:
    type: cloudify.openstack.nodes.Network
    properties:
      openstack_config: *client_config
      use_external_resource: true
      resource_id:  { get_capability: [{ get_input: openstack_network_deployment_name }, wan_network] }

  network_security_group:
    type: cloudify.openstack.nodes.SecurityGroup
    properties:
      openstack_config: *client_config
      use_external_resource: true
      resource_id:  { get_capability: [{ get_input: openstack_network_deployment_name }, network_security_group] }

  mgmt_floating_ip_address:
    type: cloudify.openstack.nodes.FloatingIP
    properties:
      openstack_config: *client_config
      use_external_resource: false
      floatingip:
        floating_network_name: { get_capability: [{ get_input: openstack_network_deployment_name }, external_network] }

  public_floating_ip_address:
    type: cloudify.openstack.nodes.FloatingIP
    properties:
      openstack_config: *client_config
      use_external_resource: false
      floatingip:
        floating_network_name: { get_capability: [{ get_input: openstack_network_deployment_name }, external_network] }

  mgmt_port:
    type: cloudify.openstack.nodes.Port
    properties:
      openstack_config: *client_config
      port:
        name:
          concat:
            - { get_input: resource_prefix }
            - "_bigip_mgmt_port"
            - { get_input: resource_suffix }
    relationships:
    - type: cloudify.relationships.contained_in
      target: mgmt_network
    - type: cloudify.openstack.port_connected_to_security_group
      target: network_security_group
    - type: cloudify.openstack.port_connected_to_floating_ip
      target: mgmt_floating_ip_address

  public_port:
    type: cloudify.openstack.nodes.Port
    properties:
      openstack_config: *client_config
      port:
        name:
          concat:
            - { get_input: resource_prefix }
            - "_bigip_public_port"
            - { get_input: resource_suffix }
    relationships:
    - type: cloudify.relationships.contained_in
      target: public_network
    - type: cloudify.openstack.port_connected_to_security_group
      target: network_security_group
    - type: cloudify.openstack.port_connected_to_floating_ip
      target: public_floating_ip_address

  wan_port:
    type: cloudify.openstack.nodes.Port
    properties:
      openstack_config: *client_config
      port:
        name:
          concat:
            - { get_input: resource_prefix }
            - "_bigip_wan_port"
            - { get_input: resource_suffix }
    relationships:
    - type: cloudify.relationships.contained_in
      target: wan_network
    - type: cloudify.openstack.port_connected_to_security_group
      target: network_security_group

  image:
    type: cloudify.openstack.nodes.Image
    properties:
      image:
        container_format: "bare"
        disk_format: "qcow2"
      openstack_config: *client_config
      use_external_resource: True
      create_if_missing: False
      resource_id: { get_input: image_id }

  vm:
    type: cloudify.openstack.nodes.Server
    properties:
      openstack_config: *client_config
      agent_config:
        install_method: none
      management_network_name: { get_attribute: [ mgmt_network, external_name ] }
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            args:
              name:
                concat:
                  - { get_input: resource_prefix }
                  - "_bigip_vm"
                  - { get_input: resource_suffix }
              image: { get_property: [ image, resource_id ] }
              flavor: { get_input: flavor_id }
    relationships:
    - type: cloudify.openstack.server_connected_to_port
      target: mgmt_port
    - type: cloudify.openstack.server_connected_to_port
      target: public_port
    - type: cloudify.openstack.server_connected_to_port
      target: wan_port
    - type: cloudify.relationships.depends_on
      target: image


capabilities:

  vm_public_mgmt_ip_address:
    value: { get_attribute: [mgmt_floating_ip_address, floating_ip_address] }
  vm_public_ip_address:
    value: { get_attribute: [public_floating_ip_address, floating_ip_address] }
  wan_ip:
    value: { get_attribute: [wan_port, fixed_ip_address] }
  public_ip:
    value: { get_attribute: [public_port, fixed_ip_address] }
